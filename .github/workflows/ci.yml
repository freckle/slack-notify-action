name: CI

on:
  push:
    branches: main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          slack-webhook-url: unused
          message: |
            Some extra message content
            that is multi-line
          dry-run: true

      - uses: bats-core/bats-action@2.1.1
        with:
          support-path: /usr/lib/bats/bats-support
          assert-path: /usr/lib/bats/bats-assert

      - name: Setup
        run: |
          cat >test.bats <<'EOM'
          bats_load_library bats-support
          bats_load_library bats-assert

          assert_equal "$SLACK_COLOR" 'success'
          assert_equal "$SLACK_TITLE" 'CI test succeeded'
          assert test -n "$SLACK_FOOTER"

          run echo "$SLACK_MESSAGE"
          assert_line --index 0 --regexp '^[^ ]* committed'
          assert_line --index 1 'Some extra message content'
          assert_line --index 2 'that is multi-line'
          EOM

      - name: Test
        run: bats test.bats

  test-matrix:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env:
          - dev
          - prod

    steps:
      - uses: actions/checkout@v4
      - uses: ./
        with:
          slack-webhook-url: unused
          job-name: "${{ github.job }} (${{ matrix.env }})"
          dry-run: true

      - uses: bats-core/bats-action@2.1.1
        with:
          support-path: /usr/lib/bats/bats-support
          assert-path: /usr/lib/bats/bats-assert

      - name: Setup
        run: |
          cat >test.bats <<'EOM'
          bats_load_library bats-support
          bats_load_library bats-assert

          assert_equal "$SLACK_COLOR" 'success'
          assert_equal "$SLACK_TITLE" 'CI test-matrix succeeded'
          assert test -n "$SLACK_MESSAGE"
          assert test -n "$SLACK_FOOTER"
          EOM

      - name: Test
        run: bats test.bats
